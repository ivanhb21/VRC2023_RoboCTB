#include <Adafruit_PWMServoDriver.h>
#include <Wire.h>
#include <PS2X_lib.h>

#define PS2_DAT 12 // MISO
#define PS2_CMD 13 // MOSI
#define PS2_SEL 15 // SS
#define PS2_CLK 14 // SLK

#define SEN_1_PIN 39
#define SEN_2_PIN 36
#define SEN_3_PIN 2
#define SEN_4_PIN 32

int i;
int gt1, gt2, gt3, gt4;

#define DC_MOTOR_1_CHAN_1 10 //motor di chuyen 1 chan 1
#define DC_MOTOR_1_CHAN_2 11 //motor di chuyen 1 chan 2
#define DC_MOTOR_2_CHAN_1 8 //motor di chuyen 2 chan 1
#define DC_MOTOR_2_CHAN_2 9 //motor di chuyen 2 chan 2

#define DC_MOTOR_3_CHAN_1 12 //motor lay bong chan 1
#define DC_MOTOR_3_CHAN_2 13 //motor lay bong chan 2

#define DC_MOTOR_4_CHAN_1 14 //motor ban bong chan 1
#define DC_MOTOR_4_CHAN_2 15 //motor ban bong chan 2

#define Servo_180_1 4 //servo lay bong 
#define Servo_180_2 5 //servo cua xa
#define Servo_360_1 6 //servo lua bong 1
#define Servo_360_2 7 //servo lua bong 2
 
// define toc do mottor
#define MIN_SERVO_180_SPEED 204 //goc quay min servo
#define MAX_SERVO_180_SPEED 410 //goc quay max servo
#define MIN_SERVO_360_SPEED 220 //max toc theo chieu am
#define MAX_SERVO_360_SPEED 440 //max toc theo chieu duong
#define SERVO_FREQ 60 //set tan so servo
#define ENA
#define ENB

#define pressures false
#define rumble false

//khoi tao class thu vien
Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();
PS2X ps2x;

void setup() {
  pinMode(SEN_1_PIN,INPUT); //set dien ap thap
  pinMode(SEN_2_PIN,INPUT); //set dien ap thap
  pinMode(SEN_3_PIN,INPUT); //set dien ap thap
  pinMode(SEN_4_PIN,INPUT); //set dien ap thap
  
  pwm.begin();
  pwm.setOscillatorFrequency(27000000);
  pwm.setPWMFreq(60);

  Wire.setClock(400000);
  Serial.begin(115200);
  Serial.print("Ket noi voi tay cam PS2:");
  
 int error = -1;
  for (int i = 0; i < 10; i++) // thử kết nối với tay cầm ps2 trong 10 lần
  {
    delay(1000); // đợi 1 giây
    // cài đặt chân và các chế độ: GamePad(clock, command, attention, data, Pressures?, Rumble?) check for error
    error = ps2x.config_gamepad(PS2_CLK, PS2_CMD, PS2_SEL, PS2_DAT, pressures, rumble);
    Serial.print(".");
  }

  switch (error) // kiểm tra lỗi nếu sau 10 lần không kết nối được
  {
  case 0:
    Serial.println(" Ket noi tay cam PS2 thanh cong");
    break;
  case 1:
    Serial.println(" LOI: Khong tim thay tay cam, hay kiem tra day ket noi vơi tay cam ");
    break;
  case 2:
    Serial.println(" LOI: khong gui duoc lenh");
    break;
  case 3:
    Serial.println(" LOI: Khong vao duoc Pressures mode ");
    break;
  }
}
    
void laybong() {
   Serial.println("TRIANGLE PRESSED");
   pwm.setPWM(12, 0, 4095);
   pwm.setPWM(13, 0, 0);
  
}
void banbong() {
    pwm.setPWM(14, 0, 4095);
    pwm.setPWM(15, 0, 0);
   Serial.println("PAD_L2 is being held");
}

void daochieubanbong() {
   Serial.println("PAD R2 is being held");
   pwm.setPWM(14, 0, 0);//motor ban bong dao chieu
   pwm.setPWM(15, 0, 1229);//motor ban bong dao chieu

}
void tamdungbanbong() {
    pwm.setPWM(14, 0, 0);
    pwm.setPWM(15, 0, 0);
    pwm.setPWM(6, 0, 0);
    pwm.setPWM(7, 0, 0);
}

void servoluabong() {
    pwm.setPWM(Servo_360_1, 0, MAX_SERVO_360_SPEED);
    pwm.setPWM(Servo_360_2, 0, MAX_SERVO_360_SPEED);
    Serial.println("pad up Pressed");
}
void servodaochieu() {
    pwm.setPWM(Servo_360_1, 0, MIN_SERVO_360_SPEED);
    pwm.setPWM(Servo_360_2, 0, MIN_SERVO_360_SPEED);
    Serial.println("pad down Pressed");
}
 

void tuhuy() {
  pwm.setPWM(8, 0, 0);
  pwm.setPWM(9, 0, 0);
  pwm.setPWM(10, 0, 0);
  pwm.setPWM(11, 0, 0);
  pwm.setPWM(12, 0, 0);
  pwm.setPWM(13, 0, 0);
  pwm.setPWM(14, 0, 0);
  pwm.setPWM(15, 0, 0);
  pwm.setPWM(5, 0, 0);
  pwm.setPWM(6, 0, 0);
  pwm.setPWM(7, 0, 0);
  pwm.setPWM(4, 0, 0);
}


void loop() {
   delay(10);
    ps2x.read_gamepad(false, false); // gọi hàm để đọc tay điều khiển
 
  int speed = 4095;
  int nJoyX = 128 - ps2x.Analog(PSS_LX); // read x-joystick
  int nJoyY = 128 - ps2x.Analog(PSS_LY); // read y-joystick
  int nMotMixL;                          // Motor (left) mixed output
  int nMotMixR;                          // Motor (right) mixed output
  
  nJoyY /= 2;
  nJoyX /= 5;
 bool temp = (nJoyY * nJoyX > 0);
  if (nJoyX) // Turning
  {
    nMotMixL = -nJoyX + (nJoyY * temp);
    nMotMixR = nJoyX + (nJoyY * !temp);
  }
  else // Forward or Reverse
  {
    nMotMixL = nJoyY;
    nMotMixR = nJoyY;
  }

  Serial.print(("Calculated value from joystick: "));
  Serial.print(nMotMixL);
  Serial.print("\t");
  Serial.println(nMotMixR);
  int c1 = 0, c2 = 0, c3 = 0, c4 = 0;
 /* code motor di chuyen
 */
 // di chuyen
  
  if (nMotMixR >= 0)
  {
    c3 = nMotMixR;
    c3 = map(c3, 0, 127, 0, speed);
    pwm.setPWM(10, 0, c3);
    pwm.setPWM(11, 0, 0);
  }

 else if (nMotMixR < 0)
  {
    c4 = abs(nMotMixR);
    c4 = map(c4, 0, 127, 0, speed);
    pwm.setPWM(10, 0, 0);
    pwm.setPWM(11, 0, c4);
  }

  if (nMotMixL >= 0)
  {
    c1 = nMotMixL;
    c1 = map(c1, 0, 127, 0, speed);
    pwm.setPWM(8, 0, c1);
    pwm.setPWM(9, 0, 0);
    }
  
  else if (nMotMixL < 0)
  {
    c2 = abs(nMotMixL);
    c2 = map(c2, 0, 127, 0, speed);
    pwm.setPin(8, 0, 0);
    pwm.setPin(9, 0, c2);
  }

//dieu khien motor

 if(ps2x.ButtonPressed(PSB_TRIANGLE)) {
   laybong();
 }
 
 if(ps2x.ButtonPressed(PSB_L2)) {
   banbong();
   servoluabong();
 }

 if(ps2x.ButtonPressed(PSB_R2)) {
   daochieubanbong(); 
   servodaochieu();
 }

 if(ps2x.ButtonPressed(PSB_CIRCLE)) {
   tamdungbanbong();
 }
 
//servo cua xa 180
   //dong cua xa
  if(ps2x.ButtonPressed(PSB_PAD_UP)) {
    pwm.setPWM(Servo_180_1, 0, MIN_SERVO_180_SPEED);
    pwm.setPWM(Servo_180_2, 0, MIN_SERVO_180_SPEED);
    Serial.println("pad right pressed");
  }
   //mo cua xa
  if(ps2x.ButtonPressed(PSB_PAD_DOWN)) {
    pwm.setPWM(Servo_180_1, 0, MAX_SERVO_180_SPEED);
    pwm.setPWM(Servo_180_2, 0, MAX_SERVO_180_SPEED);
    Serial.println("pad left Pressed");
  }

  //tu huy
 if(ps2x.ButtonPressed(PSB_CROSS)) {
   tuhuy();
 }


}
